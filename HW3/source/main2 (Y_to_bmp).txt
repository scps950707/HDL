#include <stdio.h>
#include <stdlib.h>
 
int bmp_write(unsigned char *image, int xsize, int ysize, const char *filename) {
    unsigned char header[54] = {
		0x42,        // identity : B
		0x4d,        // identity : M
		0, 0, 0, 0,  // file size
		0, 0,        // reserved1
		0, 0,        // reserved2
		54, 0, 0, 0, // RGB data offset
		40, 0, 0, 0, // struct BITMAPINFOHEADER size
		0, 0, 0, 0,  // bmp width
		0, 0, 0, 0,  // bmp height
		1, 0,        // planes
		24, 0,       // bit per pixel
		0, 0, 0, 0,  // compression
		0, 0, 0, 0,  // data size
		0, 0, 0, 0,  // h resolution
		0, 0, 0, 0,  // v resolution 
		0, 0, 0, 0,  // used colors
		0, 0, 0, 0   // important colors
	};
    long file_size = (long)xsize * (long)ysize * 3 + 54;
    long width, height;
    FILE *fp;
    
    header[2] = (unsigned char)(file_size &0x000000ff);
    header[3] = (file_size >> 8) & 0x000000ff;
    header[4] = (file_size >> 16) & 0x000000ff;
    header[5] = (file_size >> 24) & 0x000000ff;
    
    width = xsize;
    header[18] = width & 0x000000ff;
    header[19] = (width >> 8) &0x000000ff;
    header[20] = (width >> 16) &0x000000ff;
    header[21] = (width >> 24) &0x000000ff;
    
    height = ysize;
    header[22] = height &0x000000ff;
    header[23] = (height >> 8) &0x000000ff;
    header[24] = (height >> 16) &0x000000ff;
    header[25] = (height >> 24) &0x000000ff;
    
    if (!(fp = fopen(filename, "wb")))
      return -1;
    
    fwrite(header, sizeof(unsigned char), 54, fp);
    fwrite(image, sizeof(unsigned char), (size_t)(long)xsize * ysize * 3, fp);
    
    fclose(fp);
    return 0;
}

int read_image(const char *fname, const char *fname_out) {
	unsigned int  x,y;					// for loop counter
	int R, G, B;						// color of R, G, B    
	unsigned int  width=1, height=1;	// image width, image height
	unsigned char *image = NULL;		// source image array
	
	FILE *fp ;
    int num;
    char c;
    
	if (!(fp = fopen(fname, "r"))){
    	printf("fopen error\n");
		return -1;
    }
      
	do{
		fscanf(fp,"%d%c",&num,&c);
		if(height==1){
			if(c==' '){
				width++;
			}
		}
		if(c=='\n'){
			height++;
		}
	}while(!feof(fp));
	fclose(fp);
	
	image = (unsigned char *)malloc((size_t)width * height * 3);
  	
  	if (!(fp = fopen(fname, "r"))){
    	printf("fopen error\n");
		return -1;
    }
    
	for(y = 0; y != height; ++y) {
		for(x = 0; x != width; ++x) {
			fscanf(fp,"%d%c",&num,&c);
      		*(image + 3 * (width * y + x) + 2) = num;
      		*(image + 3 * (width * y + x) + 1) = num;
      		*(image + 3 * (width * y + x) + 0) = num;
		}
	}
	
  	bmp_write(image, width, height, fname_out);
    return 0;
}

int main() {
	
	read_image("intensity.txt", "out.bmp");		// input&output filename
	
	system("pause");
	return 0;
}
